---
description: 
globs: 
alwaysApply: true
---
# Infrastructure Structure

The infrastructure code uses AWS CDK (Cloud Development Kit) with TypeScript.

## Entry Point

- [infrastructure/bin/infrastructure.ts](mdc:infrastructure/bin/infrastructure.ts): CDK app entry point

## Main Stack

- [infrastructure/lib/infrastructure-stack.ts](mdc:infrastructure/lib/infrastructure-stack.ts): Main stack that orchestrates nested stacks

## Nested Stacks

- [infrastructure/lib/stacks/security.stack.ts](mdc:infrastructure/lib/stacks/security.stack.ts): AWS Cognito and security resources
- [infrastructure/lib/stacks/frontend.stack.ts](mdc:infrastructure/lib/stacks/frontend.stack.ts): Frontend hosting infrastructure

## Constructs

- [infrastructure/lib/security/cognito.construct.ts](mdc:infrastructure/lib/security/cognito.construct.ts): Cognito user pool and client setup
- [infrastructure/lib/security/update-callback-urls.construct.ts](mdc:infrastructure/lib/security/update-callback-urls.construct.ts): Updates Cognito callback URLs
- [infrastructure/lib/frontend/frontend-hosting.construct.ts](mdc:infrastructure/lib/frontend/frontend-hosting.construct.ts): CloudFront distribution for frontend

## Lambda Functions

- [infrastructure/lib/frontend/cf-auth.function.ts](mdc:infrastructure/lib/frontend/cf-auth.function.ts): CloudFront auth function
- [infrastructure/lib/frontend/cf-check-auth.function.ts](mdc:infrastructure/lib/frontend/cf-check-auth.function.ts): CloudFront auth check function

## Development Commands

Run the following commands from the `infrastructure/` directory:

- `npm run build`: Compile TypeScript to JavaScript
- `npm run watch`: Watch for changes and compile
- `npm run test`: Run tests
- `npx cdk deploy`: Deploy the stack to AWS
- `npx cdk diff`: Compare deployed stack with current state
- `npx cdk synth`: Generate CloudFormation template
